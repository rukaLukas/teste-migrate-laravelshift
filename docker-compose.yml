version: '2.0'
services:

  #PHP Service
  app:
    build:
      context: .
    image: api-bav
    container_name: bav_app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
      MAIL_USERNAME: ${MAIL_USERNAME}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
      DB_PASSWORD: ${DB_PASSWORD}
      APP_ENV: ${APP_ENV}
      APP_DEBUG: ${APP_DEBUG}
      APP_URL: ${APP_URL}
      HERE_API_KEY: ${HERE_API_KEY}
      LOG_SLACK_WEBHOOK_URL: ${LOG_SLACK_WEBHOOK_URL}
      BUGSNAG_API_KEY: ${BUGSNAG_API_KEY}
      SPACES_KEY: ${SPACES_KEY}
      SPACES_SECRET: ${SPACES_SECRET}
      SPACES_BUCKET: ${SPACES_BUCKET}
    working_dir: /var/www/html/
    volumes:
      - ./:/var/www/html/
    networks:
      - app-network


  #NGINX
  webserver:
    image: nginx:alpine
    container_name: bav_webserver
    restart: unless-stopped
    tty: true
    depends_on:
      - app
    ports:
      - 8181:8181
      # - 443:443
    volumes:
      - ./:/var/www/html/
      - ./nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - app-network

  db:
    image: mysql:8
    container_name: bav_db
    restart: unless-stopped
    tty: true
    environment:
      MYSQL_DATABASE: bav
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
      MYSQL_ROOT_PASSWORD: root
    command: mysqld --secure-file-priv=/handled_files
    volumes:
      - ${MYSQL_VOLUME}:/var/lib/mysql
      - ../infra/handled_files/tse_files:/handled_files/tse_files
      - ../infra/handled_files/cnes_files:/handled_files/cnes_files
    ports:
      - 3306:3306
    networks:
      - app-network

  composer:
    restart: 'no'
    depends_on:
      - webserver
    image: composer:2
    command: sh -c "composer install --ignore-platform-reqs && cp .env.example .env && php artisan key:generate"
    volumes:
        - ./:/app
    networks:
      - app-network

  caddy:
    image: caddy:2-alpine
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    environment:
      - DOMAIN=${DOMAIN}
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
      - /data/caddy/data:/data # Optional
      - /data/caddy/config:/config # Optional
    depends_on:
      - webserver
    networks:
      - app-network



#Docker Networks
networks:
  app-network:
    driver: bridge
volumes:
  dbdata:
    driver: local
